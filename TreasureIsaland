// Treasure Island
// You have a map that marks the location of a treasure island. Some of the map area has jagged rocks and dangerous reefs. Other areas are safe to sail in. 
// There are other explorers trying to find the treasure. So you must figure out a shortest route to the treasure island.
// Assume the map area is a two dimensional grid, represented by a matrix of characters.
// You must start from the top-left corner of the map and can move one block up, down, left or right at a time.
// The treasure island is marked as ‘X’ in a block of the matrix. ‘X’ will not be at the top-left corner.
// Any block with dangerous rocks or reefs will be marked as ‘D’. You must not enter dangerous blocks. You cannot leave the map area.
// Other areas ‘O’ are safe to sail in. The top-left corner is always safe.
// Output the minimum number of steps to get to the treasure.
// from aonecode.com

// e.g.
// Input
// [
// [‘O’, ‘O’, ‘O’, ‘O’],
// [‘D’, ‘O’, ‘D’, ‘O’],
// [‘O’, ‘O’, ‘O’, ‘O’],
// [‘X’, ‘D’, ‘D’, ‘O’],
// ]

// Output from aonecode.com
// Route is (0, 0), (0, 1), (1, 1), (2, 1), (2, 0), (3, 0) The minimum route takes 5 steps. 

const island = [
['O', 'O', 'O', 'O'],
['D', 'O', 'D', 'O'],
['O', 'O', 'O', 'O'],
['X', 'D', 'D', 'O'],
];

const minSteps = function() {
  let result=0;
  let i=0;
  let j=0;
  while(i!==island.length-1 && j!==island[0].length-1){
    if(island[i][j] === 'O'){
      result++;
      if(island[i+1][j] === 'O'){
        i++;
      }else if(island[i][j+1] === 'O'){
        console.log(island[i][j+1]);
        j++;
      }
      else{
        break;
      }
    }
  }
  return result;
}

console.log('result', minSteps());
